name: Publish executables & Docker image

on:
  release:
    types:
      - created
#   push:
#     tags:
#       - "*"

env:
  GO111MODULE: on

jobs:
  version:
      name: Set release version
      runs-on: ubuntu-latest
      outputs:
        release-version: ${{ steps.release-version-step.outputs.RELEASE_VERSION }}
      steps:
        - id: release-version-step
          run: echo "::set-output name=RELEASE_VERSION::${GITHUB_REF#refs/tags/}"

  # Run test
  run-test:
    strategy:
      matrix:
        go-version: [1.13.x, 1.14.x]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Test
      run: go test -v ./...

  # Create Krane binary & attach it to the release
  build-binary-release:
    needs: [version, run-test]
    name: Publish the krane executable
    runs-on: ubuntu-latest

    steps:
      - name: Print release version
        run: echo "Publishing krane version ${{ env.RELEASE_VERSION }}"
        env:
          RELEASE_VERSION: ${{ needs.version.outputs.release-version }}
        
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # See: https://goreleaser.com/ci/actions/

      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
        id: go

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@master
        with:
          version: latest
          args: release --rm-dist
          workdir: ./cmd/krane
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Build docker image and publish to registry
  publish-release-to-docker:
    needs: [version, run-test, build-binary-release]
    name: Publish Docker image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: biensupernice/krane
          tags: latest, ${{ env.RELEASE_VERSION }}
          build_args: VERSION=${{ env.RELEASE_VERSION }}
        env: 
            RELEASE_VERSION: ${{ needs.version.outputs.release-version }}
